angular.module('PromiseApp', ['ngMaterial']);

function PromiseCtrl() {
    vm = this;
    vm.promise = null;

    vm.displayText = "hello";
    vm.onClickButton = onClickButton;
    console.log(PromiseFC);

    function onClickButton() {
        console.log(PromiseFc.count);
        //if(vm.promise) vm.promise.reject("promise manually rejec");
        vm.promise = PromiseFc.displayFunction().then(function(data) {

            vm.displayText = data.data;
        }, function(data) {

            vm.displayText = data;

        });
        console.log("after promise");
        waiting();
        console.log("after fucntion");

    }

    function waiting() {
        console.log("inside wait");

    }
    window.onbeforeunload = function(event) {
        // do some stuff here, like reloading your current state
        //this would work only if the user chooses not to leave the page
        return 'why would you do that???';
    }

}

function PromiseFc() {
    factory = {};
    factory.count = 0;
    factory.lastPromise = null;
    factory.displayFunction = displayFunction;

    function displayFunction() {
        factory.count++;
        if (factory.lastPromise) factory.lastPromise.reject("rejected");
        var d = $q.defer();
        factory.lastPromise = d;
        // if(factory.count%2==0)
        // 	{	

        setTimeout(function() {
            d.resolve({ data: "promise resolved" + factory.count });

        }, 5000);
        // d.resolve({data:"promise resolved"});
        //  	factory.count++;

        // }
        // else{
        // 	d.reject("promise not resolved");

        // }

        return d.promise;
    };



    // function displayFunction(){

    //  if(count%2==0)
    //  	{
    //  		differed.resolve("promise resolved");
    //  		count++;
    //  	}
    //  else
    //  	differed.reslove("promise not resolved")
    // }

    return factory;
}

angular.module('PromiseApp').controller('PromiseCtrl', PromiseCtrl);
angular.module('PromiseApp').factory('PromiseFc', PromiseFc);
PromiseFc.$inject = ["$q", "$timeout"];
PromiseCtrl.$inject = ["PromiseFc"];

